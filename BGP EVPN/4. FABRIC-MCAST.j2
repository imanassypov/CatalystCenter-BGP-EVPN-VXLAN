{% include "EVPN/DEFN-VRF" %}
{% include "EVPN/DEFN-ROLES" %}
{% include "EVPN/DEFN-LOOPBACKS" %}
{% include "EVPN/DEFN-OVERLAY" %}
{% include "EVPN/DEFN-L3OUT" %}
{% include "EVPN/DEFN-MCAST" %}

{# Resolve the VRF objects upfront #}
{% set vrf_objs = [] %}
{% for input_vrf in vrf_list %}
  {% set _vrf = (DEFN_VRF | selectattr("name", "equalto", input_vrf) | list | first) %}
  {% if _vrf %}{% do vrf_objs.append(_vrf | first) %}{% endif %}
{% endfor %}

ip multicast-routing
!
{% for vrf in vrf_objs %}
ip multicast-routing vrf {{vrf.name}}
{% endfor %}
!
ip pim spt-threshold 0
!
{# CONFIGURE ANYCAST RP INTERFACE ON SPINES ONLY #}
{% if __device.hostname in DEFN_NODE_ROLES['SPINE'] %}
interface {{DEFN_LOOP_NAME['ANYCAST']}}
description AnycastRP Fabric Loopback
ip address {{FABRIC_RP_ADDR}} 255.255.255.255
ip pim sparse-mode
ip {{FABRIC_UNDERLAY.proto}} {{FABRIC_UNDERLAY.instance_id}} area {{FABRIC_UNDERLAY.area}}
!
ip msdp cache-sa-state
{% for spine in DEFN_NODE_ROLES['SPINE'] %}
{% if spine != __device.hostname %}
ip msdp peer {{DEFN_LOOP_UNDERLAY[spine]}} connect-source {{DEFN_LOOP_NAME['UNDERLAY']}} remote-as {{FABRIC_BGP_ASN}}
{% endif %}
{% endfor %}
{% endif %}
!

interface {{DEFN_LOOP_NAME['UNDERLAY']}}
ip pim sparse-mode
!

ip access-list standard FABRIC-RP-SCOPE
{% set acl_index = 10 %}
{% for scope in FABRIC_RP_SCOPES %}
{{acl_index}} permit {{scope}}
{% set acl_index = acl_index + 10 %}
{% endfor %}
!
ip pim rp-address {{FABRIC_RP_ADDR}} FABRIC-RP-SCOPE

ip access-list standard ENTERPRISE-RP-SCOPE
{% set acl_index = 10 %}
{% for scope in ENTERPRISE_RP_SCOPES %}
{{acl_index}} permit {{scope}}
{% set acl_index = acl_index + 10 %}
{% endfor %}
!
{# -- GRT MAPPING FOR BROWNFIELD VLANS -- #}
ip pim rp-address {{ENTERPRISE_RP_ADDR}} ENTERPRISE-RP-SCOPE

{% for vrf in vrf_objs %}
vrf definition {{ vrf.name }}
address-family ipv4
mdt auto-discovery vxlan
mdt default vxlan {{ vrf.mdt_default }}
mdt data vxlan {{ vrf.mdt_data }} 0.0.0.255
mdt data threshold 1
mdt overlay use-bgp
exit-address-family
!
{# -- PER TENANT VRF MAPPING FOR OVERLAY SEGMENTS -- #}
ip pim vrf {{vrf.name}} rp-address {{ENTERPRISE_RP_ADDR}} ENTERPRISE-RP-SCOPE
{% endfor %}

{% for vrf in vrf_objs %}
{% for l3out in DEFN_L3OUT %}
{% if l3out.vrf == vrf.name and l3out.node == __device.hostname %}
{% for interface,params in l3out.interfaces.items() %}
interface {{interface}}
ip pim sparse-mode
!
{% endfor %}
{% endif %}
{% endfor %}
{% endfor %}